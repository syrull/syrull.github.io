<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Writeups on 0x73796C31</title><link>https://sy1.sh/writeups/</link><description>Recent content in Writeups on 0x73796C31</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 25 Jun 2023 10:42:27 +0300</lastBuildDate><atom:link href="https://sy1.sh/writeups/index.xml" rel="self" type="application/rss+xml"/><item><title>Hack The Box - Sandworm [Medium]</title><link>https://sy1.sh/writeups/htb-pilgrimage/</link><pubDate>Sun, 25 Jun 2023 10:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-pilgrimage/</guid><description>I started off with rustscan
$ rustscan -a Open 10.10.11.219:22 Open 10.10.11.219:80 Then I ran ffuf to brute force some directories.
$ ffuf -u http://10.10.11.219/FUZZ -w ~/tools/SecLists/Discovery/Web-Content/common.txt That yielded the .git folders, I used git-dumper to dump the whole repository. Upon investigating the source code of the application, I&amp;rsquo;ve noticed a user called emily. I also discovered an executable magick and this fragmet of code:
$newname = uniqid(); exec(&amp;#34;/var/www/pilgrimage.htb/magick convert /var/www/pilgrimage.</description></item><item><title>Hack The Box - Sandworm [Medium]</title><link>https://sy1.sh/writeups/htb-sandworm/</link><pubDate>Sat, 24 Jun 2023 10:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-sandworm/</guid><description>I began with a simple scan, to check the ports of the machine.
$ rustscan -a Open 10.10.11.218:22 Open 10.10.11.218:80 Open 10.10.11.218:443 I went to the website that is being hosted on port 80, and I saw that there is some sort of PGP stuff. Furthermore, I noticed the following URLs:
https://ssa.htb/login https://ssa.htb/ https://ssa.htb/pgp # the site&amp;#39;s public key https://ssa.htb/guide # some sort of playground for PGP https://ssa.htb/contact https://ssa.htb/guide/verify https://ssa.htb/about https://ssa.</description></item><item><title>Hack The Box - Busqueda [Easy]</title><link>https://sy1.sh/writeups/htb-busqueda/</link><pubDate>Sat, 10 Jun 2023 19:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-busqueda/</guid><description>This machine is rather simple, upon scanning it we can see that the website has a generating search query URLs input form. On the bottom of the page, we can see the versions of the used software:
Powered by Flask and Searchor 2.4.0 $ whatweb Bootstrap[4.1.3], Country[RESERVED][ZZ], HTML5, HTTPServer[Werkzeug/2.1.2 Python/3.10.6], IP[10.10.11.208], JQuery[3.2.1], Python[3.10.6], Script, Title[Searcher], Werkzeug[2.1.2] A simple google search would yield a bug that has been removed in Searchor 2.</description></item><item><title>Hack The Box - Escape [Medium]</title><link>https://sy1.sh/writeups/htb-escape/</link><pubDate>Sat, 10 Jun 2023 02:01:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-escape/</guid><description>This is a Windows Machine which is part of an Active Directory. I would try my best to explain the stuff that I did, since that I&amp;rsquo;ve seen pretty bad write-ups that are not explaining anything. I also want to be honest, and I will link every write-up that I used to exploit the machine.
I am still learning Active Directory at the time of writing this, so there might be errors, I will do my best to mitigate that!</description></item><item><title>Hack The Box - Interface [Medium]</title><link>https://sy1.sh/writeups/htb-interface/</link><pubDate>Thu, 08 Jun 2023 02:01:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-interface/</guid><description>The most important in this machine would be the enumeration, it exploits vulnerabilities like:
CVE-2022-28368 Executing files with sudo privileges Recon I started with just the website interface.htb where there isn&amp;rsquo;t much going on, from what I gathered I saw that it was a Next.js application, but the interesting thing there were the headers.
HTTP/1.1 200 OK Server: nginx/1.14.0 (Ubuntu) Date: Tue, 14 Feb 2023 08:44:41 GMT Content-Type: text/html; charset=utf-8 Connection: close Content-Security-Policy: script-src &amp;#39;unsafe-inline&amp;#39; &amp;#39;unsafe-eval&amp;#39; &amp;#39;self&amp;#39; data: https://www.</description></item><item><title>Hack The Box - PC [Easy]</title><link>https://sy1.sh/writeups/htb-pc/</link><pubDate>Fri, 26 May 2023 02:01:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-pc/</guid><description>This machine has only 2 ports open:
$ nmap 10.10.11.214 -Pn -p- 22/tcp open ssh 50051/tcp open unknown Using telnet to see what is 50051, we get:
telnet 10.10.11.214 50051 Trying 10.10.11.214... Connected to 10.10.11.214. Escape character is &amp;#39;^]&amp;#39;. ?�?� �?^CConnection closed by foreign host. Which is some random binary data. I&amp;rsquo;ve explored it with hexdump.
0000000 0000 0418 0000 0000 0000 0004 ff3f 00ff 0000010 0005 ff3f 00ff 0006 2000 fe00 0003 0000 0000020 0001 0400 0008 0000 0000 3f00 0000 000002e I didn&amp;rsquo;t figure out what it was, so I googled the port which led me to this question: https://stackoverflow.</description></item><item><title>Hack The Box - Precious [Easy]</title><link>https://sy1.sh/writeups/htb-precious/</link><pubDate>Tue, 23 May 2023 19:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-precious/</guid><description>We begin with a simple web page that has an input, apparently this input turns a webpage to a PDF, I tried with hosting a page on my machine and tried to use it for the input.
Then the website provided me with a PDF of the website that I&amp;rsquo;ve hosted, I&amp;rsquo;ve downloaded the PDF and used the exiftool to figure out what was generating this PDF file, from there I saw that it was generated by pdfkit v0.</description></item><item><title>Hack The Box - Inject [Easy]</title><link>https://sy1.sh/writeups/htb-inject/</link><pubDate>Wed, 10 May 2023 02:01:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-inject/</guid><description>The machine is labeled misleadingly easy, but that can lead you to miss stuff, so make sure to check everything!
A simple nmap scan shows us that 8080 port is open.
Nmap scan report for 10.10.11.204 Host is up (0.13s latency). Not shown: 998 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 caf10c515a596277f0a80c5c7c8ddaf8 (RSA) | 256 d51c81c97b076b1cc1b429254b52219f (ECDSA) |_ 256 db1d8ceb9472b0d3ed44b96c93a7f91d (ED25519) 8080/tcp open nagios-nsca Nagios NSCA |_http-title: Home Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Let&amp;rsquo;s start by simply inspecting the website that is running on port :8080.</description></item><item><title>Hack The Box - MetaTwo [Easy]</title><link>https://sy1.sh/writeups/htb-metatwo/</link><pubDate>Fri, 21 Apr 2023 19:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-metatwo/</guid><description>Starting out with rustscan
Open 10.10.11.186:21 Open 10.10.11.186:22 Open 10.10.11.186:80 [~] Starting Script(s) [~] Starting Nmap 7.93 ( https://nmap.org ) at 2023-04-21 16:34 EEST Initiating Ping Scan at 16:34 Scanning 10.10.11.186 [2 ports] Completed Ping Scan at 16:34, 0.05s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 16:34 Completed Parallel DNS resolution of 1 host. at 16:34, 0.23s elapsed DNS resolution of 1 IPs took 0.23s. Mode: Async [#: 1, OK: 0, NX: 1, DR: 0, SF: 0, TR: 1, CN: 0] Initiating Connect Scan at 16:34 Scanning 10.</description></item><item><title>Hack The Box - Socket [Medium]</title><link>https://sy1.sh/writeups/htb-socket/</link><pubDate>Fri, 21 Apr 2023 10:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-socket/</guid><description>So let&amp;rsquo;s start with a rustscan of the machine
Open 10.10.11.206:22 Open 10.10.11.206:80 Open 10.10.11.206:5789 [~] Starting Script(s) [~] Starting Nmap 7.93 ( https://nmap.org ) at 2023-04-21 14:37 EEST Initiating Ping Scan at 14:37 Scanning 10.10.11.206 [2 ports] Completed Ping Scan at 14:37, 0.05s elapsed (1 total hosts) Initiating Connect Scan at 14:37 Scanning qreader.htb (10.10.11.206) [3 ports] Discovered open port 22/tcp on 10.10.11.206 Discovered open port 80/tcp on 10.10.11.206 Discovered open port 5789/tcp on 10.</description></item><item><title>Proving Grounds (OSCP) - Sar</title><link>https://sy1.sh/writeups/pg-sar/</link><pubDate>Sat, 15 Apr 2023 11:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/pg-sar/</guid><description>This was a fairly easy machine, I began with a nmap scan:
PORT STATE SERVICE 22/tcp open ssh 80/tcp open http On port 80 there was a blank website, so I fuzz it and found bunch of files.
http://192.168.210.35/robots.txt -&amp;gt; http://192.168.210.35/sar2HTML/ http://192.168.210.35/phpinfo.php Using the phpinfo I have enumerated the versions
sar2html Ver 3.2.1 &amp;lt;-- Vulnerable Linux sar 5.0.0-23-generic #24~18.04.1-Ubuntu SMP Mon Jul 29 16:12:28 UTC 2019 x86_64 Apache/2.4.29 PHP 7.1.32-1+ubuntu18.04.1+deb.sury.org+1 exif 7.</description></item><item><title>Proving Grounds (OSCP) - Photographer</title><link>https://sy1.sh/writeups/pg-photographer/</link><pubDate>Sat, 15 Apr 2023 10:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/pg-photographer/</guid><description>I&amp;rsquo;ve started my OSCP journey a while ago, and I wanted to try the PG machines, this is the first one that I&amp;rsquo;ve tried. The machine is fairly straightforward and it&amp;rsquo;s labeled easy.
I&amp;rsquo;ve started with a simple nmap scan, which hinted that this Linux machine is part of an Active Directory.
PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 414daa1886948e88a74c6b426076f14f (RSA) | 256 4da3d07a8f64ef82452d011318b7e013 (ECDSA) |_ 256 1a017a4fcf9585bf31a14f1587ab94e2 (ED25519) 80/tcp open http Apache httpd 2.</description></item><item><title>Hack The Box - Encoding [Medium]</title><link>https://sy1.sh/writeups/htb-encoding/</link><pubDate>Fri, 17 Feb 2023 02:01:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-encoding/</guid><description>This machine took me a couple of days due to its complexity and some minor stuff that were a hassle to get right.
You will find the following vulnerabilities: - Local File Inclusion - Command Injection or RCE
Flag 1 I started by looking through the website to get some idea of its functionality. I saw that this is some sort of converter of data, like binary to hex and so on.</description></item><item><title>Hack The Box - Vessel [Hard]</title><link>https://sy1.sh/writeups/htb-vessel/</link><pubDate>Sun, 12 Feb 2023 10:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-vessel/</guid><description>Overview Since it becomes very time consuming doing this in a video this write-up is going to be in a text.
The machine is labeled hard with a good reason, most of the tasks are time consuming but there are some interesting vulnerabilities like CVE-2022-0811 and CVE-2022-24637.
On top of these we have NoSQL Injection and some PE reverse engineering.
Write-up Flag 1 First I began enumerating the whole website with ffuf.</description></item><item><title>Hack The Box - Investigation [Medium]</title><link>https://sy1.sh/writeups/htb-investigation/</link><pubDate>Fri, 10 Feb 2023 19:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-investigation/</guid><description>This box consist of several vulnerabilities:
Command Injection - Used a vulnerability in exiftool that allowed me to run arbitrary code. Leaked Credentials - Then we found the .msg file which contained an event logs from a Windows machine where we found the credentials for user smorton. I wasted a lot of time an effort to figure that one out, so don&amp;rsquo;t be discouraged when you can&amp;rsquo;t find it in the first 5 mins.</description></item><item><title>Hack The Box - Broscience [Medium]</title><link>https://sy1.sh/writeups/htb-broscience/</link><pubDate>Thu, 09 Feb 2023 19:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-broscience/</guid><description>Short Overview The video consist of my process of enumeration and overall hacking the machine, please use this as a walkthrough.
This box consist of several vulnerabilities:
Local File Inclusion/Path traversal - The query string path= in the img.php file is vulnerable to that, with that we can download the site map that I&amp;rsquo;ve discovered using Burp Deserialization / PHP Object Injection - I saw that in the utils.php file, and I&amp;rsquo;ve prepared a payload for the AvatarInterface since this is the class that is using magic methods, and it has the file_get_contents function that we are going to use to pull the PHP reverse shell.</description></item><item><title>Hack The Box - Stocker [Easy]</title><link>https://sy1.sh/writeups/htb-stocker/</link><pubDate>Thu, 09 Feb 2023 19:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-stocker/</guid><description>Hack The Box - Stocker [Easy]</description></item><item><title>Malware Analysis - CB Challenges</title><link>https://sy1.sh/writeups/malware-analysis-2022cb-challenges/</link><pubDate>Thu, 09 Feb 2023 19:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/malware-analysis-2022cb-challenges/</guid><description>Overview Putting up my analysis of some malware samples.
Samples Report 5dee718c386934d2494ee5ddde79d27a69c1687493b6eb40d0db47f730ab76fb View 6fd9909f8ec811577351402832665d4a6b6e5399422b8cac79dd98532ac48913 View 19a3dd8024bb4677261ecd8bb85e8a4c53d15870e4b9d2203e933a00b7eecb85 View 280d2ceb081745412127a018055234f5a72935a77aa102aef7924ba21f43d4ee View f8c4c946eaedcfa8bbb722970211c2c4a458f6483dafb5d5a7fd83b3daa441cd View f8c4c946eaedcfa8bbb722970211c2c4a458f6483dafb5d5a7fd83b3daa441cd I eventually found the XOR cipher key, unfortunately my bruteforce script wasn&amp;rsquo;t able to recover the url but in the end the string wasn&amp;rsquo;t exactly an url. The key was en-CB and the decoded string is c2.2go.ma1w.are_eT!/eab/+CE%&amp;amp;6d</description></item></channel></rss>