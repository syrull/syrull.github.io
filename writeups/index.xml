<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Writeups on 0x73796C31</title><link>https://sy1.sh/writeups/</link><description>Recent content in Writeups on 0x73796C31</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 10 Jun 2023 19:42:27 +0300</lastBuildDate><atom:link href="https://sy1.sh/writeups/index.xml" rel="self" type="application/rss+xml"/><item><title>Hack The Box - Busqueda [Easy]</title><link>https://sy1.sh/writeups/htb-busqueda/</link><pubDate>Sat, 10 Jun 2023 19:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-busqueda/</guid><description>This machine is rather simple, upon scanning it we can see that the website has a generating search query URLs input form. On the bottom of the page, we can see the versions of the used software:
Powered by Flask and Searchor 2.4.0 $ whatweb Bootstrap[4.1.3], Country[RESERVED][ZZ], HTML5, HTTPServer[Werkzeug/2.1.2 Python/3.10.6], IP[10.10.11.208], JQuery[3.2.1], Python[3.10.6], Script, Title[Searcher], Werkzeug[2.1.2] A simple google search would yield a bug that has been removed in Searchor 2.</description></item><item><title>Hack The Box - Escape [Medium]</title><link>https://sy1.sh/writeups/htb-escape/</link><pubDate>Sat, 10 Jun 2023 02:01:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-escape/</guid><description>This is a Windows Machine which is part of an Active Directory. I would try my best to explain the stuff that I did, since that I&amp;rsquo;ve seen pretty bad write-ups that are not explaining anything. I also want to be honest, and I will link every write-up that I used to exploit the machine.
I am still learning Active Directory at the time of writing this, so there might be errors, I will do my best to mitigate that!</description></item><item><title>Hack The Box - Precious [Easy]</title><link>https://sy1.sh/writeups/htb-precious/</link><pubDate>Tue, 23 May 2023 19:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-precious/</guid><description>We begin with a simple web page that has an input, apparently this input turns a webpage to a PDF, I tried with hosting a page on my machine and tried to use it for the input.
Then the website provided me with a PDF of the website that I&amp;rsquo;ve hosted, I&amp;rsquo;ve downloaded the PDF and used the exiftool to figure out what was generating this PDF file, from there I saw that it was generated by pdfkit v0.</description></item><item><title>Hack The Box - MetaTwo [Easy]</title><link>https://sy1.sh/writeups/htb-metatwo/</link><pubDate>Fri, 21 Apr 2023 19:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-metatwo/</guid><description>Starting out with rustscan
Open 10.10.11.186:21 Open 10.10.11.186:22 Open 10.10.11.186:80 [~] Starting Script(s) [~] Starting Nmap 7.93 ( https://nmap.org ) at 2023-04-21 16:34 EEST Initiating Ping Scan at 16:34 Scanning 10.10.11.186 [2 ports] Completed Ping Scan at 16:34, 0.05s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 16:34 Completed Parallel DNS resolution of 1 host. at 16:34, 0.23s elapsed DNS resolution of 1 IPs took 0.23s. Mode: Async [#: 1, OK: 0, NX: 1, DR: 0, SF: 0, TR: 1, CN: 0] Initiating Connect Scan at 16:34 Scanning 10.</description></item><item><title>Proving Grounds (OSCP) - Sar</title><link>https://sy1.sh/writeups/pg-sar/</link><pubDate>Sat, 15 Apr 2023 11:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/pg-sar/</guid><description>This was a fairly easy machine, I began with a nmap scan:
PORT STATE SERVICE 22/tcp open ssh 80/tcp open http On port 80 there was a blank website, so I fuzz it and found bunch of files.
http://192.168.210.35/robots.txt -&amp;gt; http://192.168.210.35/sar2HTML/ http://192.168.210.35/phpinfo.php Using the phpinfo I have enumerated the versions
sar2html Ver 3.2.1 &amp;lt;-- Vulnerable Linux sar 5.0.0-23-generic #24~18.04.1-Ubuntu SMP Mon Jul 29 16:12:28 UTC 2019 x86_64 Apache/2.4.29 PHP 7.1.32-1+ubuntu18.04.1+deb.sury.org+1 exif 7.</description></item><item><title>Proving Grounds (OSCP) - Photographer</title><link>https://sy1.sh/writeups/pg-photographer/</link><pubDate>Sat, 15 Apr 2023 10:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/pg-photographer/</guid><description>I&amp;rsquo;ve started my OSCP journey a while ago, and I wanted to try the PG machines, this is the first one that I&amp;rsquo;ve tried. The machine is fairly straightforward and it&amp;rsquo;s labeled easy.
I&amp;rsquo;ve started with a simple nmap scan, which hinted that this Linux machine is part of an Active Directory.
PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 414daa1886948e88a74c6b426076f14f (RSA) | 256 4da3d07a8f64ef82452d011318b7e013 (ECDSA) |_ 256 1a017a4fcf9585bf31a14f1587ab94e2 (ED25519) 80/tcp open http Apache httpd 2.</description></item><item><title>Hack The Box - Encoding [Medium]</title><link>https://sy1.sh/writeups/htb-encoding/</link><pubDate>Fri, 17 Feb 2023 02:01:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-encoding/</guid><description>This machine took me a couple of days due to its complexity and some minor stuff that were a hassle to get right.
You will find the following vulnerabilities: - Local File Inclusion - Command Injection or RCE
Flag 1 I started by looking through the website to get some idea of its functionality. I saw that this is some sort of converter of data, like binary to hex and so on.</description></item><item><title>Hack The Box - Vessel [Hard]</title><link>https://sy1.sh/writeups/htb-vessel/</link><pubDate>Sun, 12 Feb 2023 10:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-vessel/</guid><description>Overview Since it becomes very time consuming doing this in a video this write-up is going to be in a text.
The machine is labeled hard with a good reason, most of the tasks are time consuming but there are some interesting vulnerabilities like CVE-2022-0811 and CVE-2022-24637.
On top of these we have NoSQL Injection and some PE reverse engineering.
Write-up Flag 1 First I began enumerating the whole website with ffuf.</description></item><item><title>Hack The Box - Investigation [Medium]</title><link>https://sy1.sh/writeups/htb-investigation/</link><pubDate>Fri, 10 Feb 2023 19:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-investigation/</guid><description>This box consist of several vulnerabilities:
Command Injection - Used a vulnerability in exiftool that allowed me to run arbitrary code. Leaked Credentials - Then we found the .msg file which contained an event logs from a Windows machine where we found the credentials for user smorton. I wasted a lot of time an effort to figure that one out, so don&amp;rsquo;t be discouraged when you can&amp;rsquo;t find it in the first 5 mins.</description></item><item><title>Hack The Box - Broscience [Medium]</title><link>https://sy1.sh/writeups/htb-broscience/</link><pubDate>Thu, 09 Feb 2023 19:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/htb-broscience/</guid><description>Short Overview The video consist of my process of enumeration and overall hacking the machine, please use this as a walkthrough.
This box consist of several vulnerabilities:
Local File Inclusion/Path traversal - The query string path= in the img.php file is vulnerable to that, with that we can download the site map that I&amp;rsquo;ve discovered using Burp Deserialization / PHP Object Injection - I saw that in the utils.php file, and I&amp;rsquo;ve prepared a payload for the AvatarInterface since this is the class that is using magic methods, and it has the file_get_contents function that we are going to use to pull the PHP reverse shell.</description></item><item><title>Malware Analysis - CB Challenges</title><link>https://sy1.sh/writeups/malware-analysis-2022cb-challenges/</link><pubDate>Thu, 09 Feb 2023 19:42:27 +0300</pubDate><guid>https://sy1.sh/writeups/malware-analysis-2022cb-challenges/</guid><description>Overview Putting up my analysis of some malware samples.
Samples Report 5dee718c386934d2494ee5ddde79d27a69c1687493b6eb40d0db47f730ab76fb View 6fd9909f8ec811577351402832665d4a6b6e5399422b8cac79dd98532ac48913 View 19a3dd8024bb4677261ecd8bb85e8a4c53d15870e4b9d2203e933a00b7eecb85 View 280d2ceb081745412127a018055234f5a72935a77aa102aef7924ba21f43d4ee View f8c4c946eaedcfa8bbb722970211c2c4a458f6483dafb5d5a7fd83b3daa441cd View f8c4c946eaedcfa8bbb722970211c2c4a458f6483dafb5d5a7fd83b3daa441cd I eventually found the XOR cipher key, unfortunately my bruteforce script wasn&amp;rsquo;t able to recover the url but in the end the string wasn&amp;rsquo;t exactly an url. The key was en-CB and the decoded string is c2.2go.ma1w.are_eT!/eab/+CE%&amp;amp;6d</description></item></channel></rss>